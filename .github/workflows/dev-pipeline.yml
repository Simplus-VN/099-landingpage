name: CI/CD pipeline

env:
  IMAGE_REPO: 397solution/simplus:099-landing-page
  WORKFLOW_MANAGER_ENDPOINT: https://iqx3y7gabke536fvzalpxfm26y0dpsjs.lambda-url.us-east-1.on.aws
  OPERATOR_TOKEN: ${{ secrets.OPERATOR_TOKEN }}
on:
  push:
    branches: [develop]

jobs:
  dockerize-dev:
    runs-on: self-hosted
    container:
      image: dungntc/nodejs_docker_builder:1.0.1
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Dockerize
      run: |
        IMAGE_TAG=d-${GITHUB_SHA:0:7}
        docker build . -t ${IMAGE_REPO}-${IMAGE_TAG} -f dockerfile.prod
        docker push ${IMAGE_REPO}-${IMAGE_TAG}
    
  # deploy-dev:
  #   runs-on: self-hosted
  #   needs: dockerize-dev
  #   environment: general
  #   env:
  #     WORKLOAD: lucas-gitops/simplus-workload-dev
  #     SANDBOXES: dev
  #   steps:
  #   - name: Deploy version to dev cluster
  #     run: |
  #       IMAGE_TAG=d-${GITHUB_SHA:0:7}
  #       body=$(printf '{"workload":"%s", "sandboxes":"%s", "imageUrls":"%s-%s"}' ${WORKLOAD} ${SANDBOXES} ${IMAGE_REPO} ${IMAGE_TAG})
  #       authent_header="Authorization: Bearer ${OPERATOR_TOKEN}"
  #       echo $body
  #       http_code=$(curl --silent --output response_content --write-out "%{http_code}" -X 'POST' -H "${authent_header}" "${WORKFLOW_MANAGER_ENDPOINT}" -d "${body}" )
  #       echo -e "`cat response_content`"
  #       if test $http_code -ne 200; then return 1; fi
